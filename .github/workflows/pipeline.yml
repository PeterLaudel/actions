name: Test application

on:
  workflow_call:
    inputs:
      e2e:
        required: true
        type: boolean
        default: false
    

jobs:
  create-image-tag:
    name: Create image tag
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.create.outputs.TAG }}
    steps:
      - name: Extract image tag
        id: create
        run: |
          IMAGE_TAG="$BRANCH_NAME-${{ github.run_number }}-$(echo $GITHUB_SHA | cut -c1-7)"
          echo "TAG=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
          echo "Final IMAGE_TAG: ${IMAGE_TAG}"
    env:
        BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

  build-image:
    needs: create-image-tag
    name: Build Docker image
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ needs.create-image-tag.outputs.image-tag }}

    permissions:
      contents: "read"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🏗️ Build the 'builder' stage
      - name: Build builder stage
        uses: docker/build-push-action@v6
        with:
          push: false
          load: false
          target: builder
          tags: builder:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs:
      - build-image
      - create-image-tag
    env:
      IMAGE_TAG: ${{ needs.create-image-tag.outputs.image-tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docker-compose.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🏗️ Build the 'builder' stage
      - name: Build builder stage
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          target: builder
          tags: builder:${{ env.IMAGE_TAG }}
          cache-from: type=gha

      - name: Run tests
        run: IMAGE=builder:${{ env.IMAGE_TAG }} docker compose run --rm app test 

  e2e:
    name: Run e2e tests
    runs-on: ubuntu-latest
    needs:
      - build-image
      - create-image-tag
    env:
      IMAGE_TAG: ${{ needs.create-image-tag.outputs.image-tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🏗️ Build the 'builder' stage
      - name: Build builder stage
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          target: builder
          tags: builder:${{ env.IMAGE_TAG }}
          cache-from: type=gha

      - name: Run e2e tests
        run: IMAGE="builder:${{ env.IMAGE_TAG }}" docker compose run --rm -e CI='true' app e2e